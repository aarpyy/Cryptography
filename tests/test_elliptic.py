from cryptography318.crypto_functions import *


def test_elliptic_add():
    E = EllipticCurve(14, 19, 3623)
    P = E.point(6, 730)
    Q = E.point(12, 3200)
    R = P + Q
    assert R == (3196, 2410)
    P1 = R - Q
    assert P1 == P


def test_elliptic_mult():
    E = EllipticCurve(14, 19, 3623)
    P = E.point(6, 730)
    P2 = P * 947
    assert P2 == (3492, 60)


def test_elliptic_bsgs():
    E = EllipticCurve(14, 19, 3623)
    P = E.point(6, 730)
    Q = P * 947
    assert 947 == elliptic_bsgs(P, Q)


def test_string():
    E = EllipticCurve(0, 1, 180039337167793501897175493739004038762395261681316852988742367480124359904807289130328068843833873066421702742460640101217376600809338199468636198555098044628998299482972323944983045884234913875508525458735536722067910377840070662914565334732578373261984514856548773711583945448134428877109037377605127434409832936443635849865584735606971650245470719854253303747830625905599682675415954316175111606488355254401541327809795822857218931391498811975792908442781893479296187087742281713894913694970210301919109047958435358258637147)
    P = E.point(6, 730)
    Q = E.point(12, 3200)
    e = StringToElliptic(E, "Some say the world will end in fire,\n"
                         "Some say in ice.\n"
                         "From what I've tasted of desire,\n"
                         "I hold with those who favor fire. \n"
                         "But if it had to perish twice\n"
                         "I think I know enough of hate\n"
                         "To say that for destruction ice\n"
                         "Is also great\n"
                         "And would suffice.")
    n = E.point(15490639326851633662720820236587696796817898443372748471881252864019715712375893518218008651102875121868518833556970519668868653386984207672242075678621186404096386975194339320683868930137578509836060870087753955741379666525269418283032799363160786405032214475782045572397049379815848741689928452997816242888256910339389445434741806512066626967312319558082259269901509978898276103401639554172401787066314423684698592323535156299120803324622416864286709543167402817523854931538148976098355681459628795830667251870236331000, 25633232729061050648057190418817207010737805737536192717065706526052736636298481005848928839800301212158647186558807776837858907016296904260822631894340402593843018365328796405323149741944155789699374027938590972553327530218933029024530946299197497843315843340548595804643327623643419504994228886983950567617441339886561106253284916970320750066203936282066548300982979901692310091181313136783023193580328427319267771215454040330606259537135011148425427424573202420604298867018690619175589281869655613917816669438169490199916851)
    print(EllipticToString(e))


test_string()
