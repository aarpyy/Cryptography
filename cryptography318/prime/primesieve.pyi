from collections import UserList
from collections.abc import Generator

class Sieve(UserList[int]):
    data: list[int]
    def __init__(self, data: list[int] | None = ...) -> None: ...
    def search(self, n: int) -> tuple[int, int]: ...
    def extend(self, n: int) -> None: ...
    def extend_to(self, i: int) -> None: ...
    def load(self, fp, overwrite: bool = ...) -> None: ...
    def primerange(self, a, b: int | None = ...) -> Generator[int, None, None]: ...
    def primepi(self, n): ...
    def __contains__(self, n) -> bool: ...
    def __iter__(self): ...
    def __getitem__(self, n): ...
    @property
    def list(self): ...
    @property
    def tail(self): ...

primesieve: Sieve
